package com.example.product.service;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.mockito.ArgumentMatchers.nullable;
import static org.mockito.Mockito.when;

import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;

import com.example.product.model.Product;
import com.example.product.repository.ProductRepository;

@WebMvcTest(value = ProductService.class)
class ProductServiceTest {

	@MockBean
	private ProductRepository productRepository;

	@Autowired
	ProductService productService;

//	private static List<Product> products = new ArrayList<>();

//	@Test
//	void testgetAll() throws Exception {
////		Mockito.when(productRepository.findAll()).thenReturn(products);
//
//		assertNotNull(productService.getAll());
//
//	}

	@Test
	void testgetByProductId() {

		Product product = new Product(12, null, null, null, null, null);
		when(productRepository.findByProductId(12)).thenReturn(product);
		assertNotNull(productService.getByProductId(12));

	}

	@Test
	void testgetByProductType() {

		List<Product> products = new ArrayList<>();
		when(productRepository.findByProductType("u")).thenReturn(null);
		assertNotNull(productService.getByProductType("hello"));

	}

//	@Test
//	void testgetByProductType() {
//		ProductService productService = new ProductService();
//
//		List<Product> products = new ArrayList<>();
//
//	}
//
//	@Test
//	void testgetByProductName() {
//		ProductService productService = new ProductService();
//
//		List<Product> products = new ArrayList<>();
//
//		Mockito.when(productRepository.findByProductName(Mockito.any())).thenReturn(products);
//
//	}
//
//	@Test
//	void testgetByProductPrice() {
//		ProductService productService = new ProductService();
//
//		List<Product> products = new ArrayList<>();
//
//		List<Product> priceList = new ArrayList<>();
//
//		Mockito.when(productRepository.findAll()).thenReturn(products);
//
////		Mockito.when(p.productPrice()).thenReturn(priceList);
//
//	}

}
