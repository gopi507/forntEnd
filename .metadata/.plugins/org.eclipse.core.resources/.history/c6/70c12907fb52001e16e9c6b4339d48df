package com.example.product.service;

import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mockito;

import com.example.product.model.Product;
import com.example.product.repository.ProductRepository;

class ProductServiceTest {

//	@Mock
//	private 

	@InjectMocks
	private ProductRepository productRepository;

	@Test
	void testgetAll() {

		ProductService productService = new ProductService();

		List<Product> products = new ArrayList<>();

		Mockito.when(productRepository.findAll()).thenReturn(products);

//		assertEquals(null, null);

	}

	@Test
	void testgetByProductId() {
		ProductService productService = new ProductService();

		Product product = new Product();

		Mockito.when(productRepository.findByProductId(Mockito.any())).thenReturn(product);

	}

	@Test
	void testgetByProductType() {
		ProductService productService = new ProductService();

		List<Product> products = new ArrayList<>();

		Mockito.when(productRepository.findByProductType(Mockito.any())).thenReturn(products);

	}

	@Test
	void testgetByProductName() {
		ProductService productService = new ProductService();

		List<Product> products = new ArrayList<>();

		Mockito.when(productRepository.findByProductName(Mockito.any())).thenReturn(products);

	}

	@Test
	void testgetByProductPrice() {
		ProductService productService = new ProductService();

		List<Product> products = new ArrayList<>();

		List<Product> priceList = new ArrayList<>();

		Mockito.when(productRepository.findAll()).thenReturn(products);

//		Mockito.when(p.productPrice()).thenReturn(priceList);

	}

}
